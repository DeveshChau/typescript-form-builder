(()=>{"use strict";var n={365:(n,e,r)=>{r.d(e,{A:()=>l});var t=r(354),o=r.n(t),a=r(314),i=r.n(a)()(o());i.push([n.id,"body {\n  font-family: Arial, sans-serif;\n  background-color: #f4f4f4;\n  text-align: center;\n  padding: 20px;\n  color: #333;\n}\n\n.question {\n  margin-bottom: 15px;\n}\n\n.add-button {\n  background-color: #007bff;\n  color: white;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.add-button:hover {\n  background-color: #0056b3;\n}\n\n.preview-button {\n  background-color: #28a745;\n  color: white;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.preview-button:hover {\n  background-color: #18672b;\n}\n\n.preview-submit-button {\n  background-color: #28a745;\n  color: white;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.preview-submit-button:hover {\n  background-color: #18672b;\n}\n\n.remove-btn {\n  background-color: #d45433;\n  color: white;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: fit-content;\n}\n\n.remove-btn:hover {\n  background-color: #a74128\n}\n\n.form-div {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 300px;\n  margin: 10px;\n  padding: 10px;\n  border: 1px solid #f3f3f3;\n  border-radius: 8px;\n  background-color: #ddd;\n}\n\ninput {\n  background-color: #fcfeff;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  outline: none;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\ninput:focus {\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);\n  background-color: #ffffff;\n}\n\n.mainContainer {\n  display: flex;\n  margin-top: 10px;\n}\n\n.form-container {\n  flex: 1;\n}\n\n.preview-container {\n  flex: 1;\n}\n\n.radio-field {\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  border: 1px solid #f3f3f3;\n  border-radius: 8px;\n  background-color: #ddd;\n  padding: 10px;\n  margin: 10px;\n  width: 300px;\n}\n\nlegend {\n  text-align: left;\n}\n\n.radio-group {\n  margin: 5px 0;\n}\n\n.radio-group input {\n  margin-right: 10px;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,8BAA8B;EAC9B,yBAAyB;EACzB,kBAAkB;EAClB,aAAa;EACb,WAAW;AACb;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE;AACF;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,yBAAyB;EACzB,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;EACzB,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,aAAa;EACb,0CAA0C;AAC5C;;AAEA;EACE,0CAA0C;EAC1C,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,yBAAyB;EACzB,kBAAkB;EAClB,sBAAsB;EACtB,aAAa;EACb,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB",sourcesContent:["body {\r\n  font-family: Arial, sans-serif;\r\n  background-color: #f4f4f4;\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #333;\r\n}\r\n\r\n.question {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.add-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.add-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.preview-button {\r\n  background-color: #28a745;\r\n  color: white;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.preview-button:hover {\r\n  background-color: #18672b;\r\n}\r\n\r\n.preview-submit-button {\r\n  background-color: #28a745;\r\n  color: white;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.preview-submit-button:hover {\r\n  background-color: #18672b;\r\n}\r\n\r\n.remove-btn {\r\n  background-color: #d45433;\r\n  color: white;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  width: fit-content;\r\n}\r\n\r\n.remove-btn:hover {\r\n  background-color: #a74128\r\n}\r\n\r\n.form-div {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 300px;\r\n  margin: 10px;\r\n  padding: 10px;\r\n  border: 1px solid #f3f3f3;\r\n  border-radius: 8px;\r\n  background-color: #ddd;\r\n}\r\n\r\ninput {\r\n  background-color: #fcfeff;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  outline: none;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\ninput:focus {\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);\r\n  background-color: #ffffff;\r\n}\r\n\r\n.mainContainer {\r\n  display: flex;\r\n  margin-top: 10px;\r\n}\r\n\r\n.form-container {\r\n  flex: 1;\r\n}\r\n\r\n.preview-container {\r\n  flex: 1;\r\n}\r\n\r\n.radio-field {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: start;\r\n  border: 1px solid #f3f3f3;\r\n  border-radius: 8px;\r\n  background-color: #ddd;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  width: 300px;\r\n}\r\n\r\nlegend {\r\n  text-align: left;\r\n}\r\n\r\n.radio-group {\r\n  margin: 5px 0;\r\n}\r\n\r\n.radio-group input {\r\n  margin-right: 10px;\r\n}\r\n"],sourceRoot:""}]);const l=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var l=0;l<this.length;l++){var d=this[l][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);t&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),r&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=r):A[2]=r),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},354:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],l=0;l<n.length;l++){var d=n[l],c=t.base?d[0]+t.base:d[0],A=a[c]||0,p="".concat(c," ").concat(A);a[c]=A+1;var u=r(p),s={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(s);else{var f=o(s,t);t.byIndex=l,e.splice(l,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var l=r(a[i]);e[l].references--}for(var d=t(n,o),c=0;c<a.length;c++){var A=r(a[c]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=d}}},659:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0;var t=r(72),o=r.n(t),a=r(825),i=r.n(a),l=r(659),d=r.n(l),c=r(56),A=r.n(c),p=r(540),u=r.n(p),s=r(113),f=r.n(s),b=r(365),m={};function E(n){const e=document.getElementById("formDiv"),r=document.createElement("div");r.classList.add("form-div");const t=document.createElement("label");t.textContent=(null==n?void 0:n.labelText)||"Click to Edit Label: ",t.htmlFor=n.labelFor||"input-field-"+document.body.querySelectorAll("input").length,t.style.cursor="pointer",t.addEventListener("click",(()=>{const n=document.createElement("input");n.type="text",n.value=t.textContent||"",n.style.width="auto",r.replaceChild(n,t),n.focus(),n.select(),n.addEventListener("blur",(()=>{""!==n.value.trim()&&(t.textContent=n.value),r.replaceChild(t,n)}))}));const o=document.createElement("input");o.type="text",o.id=t.htmlFor;const a=document.createElement("button");a.type="button",a.textContent="Remove",a.classList.add("remove-btn"),a.addEventListener("click",(()=>{null==e||e.removeChild(r)})),r.appendChild(t),r.appendChild(o),r.appendChild(a),e.appendChild(r)}m.styleTagTransform=f(),m.setAttributes=A(),m.insert=d().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=u(),o()(b.A,m),b.A&&b.A.locals&&b.A.locals;const v=document.getElementById("selectPrebuilt"),C=document.getElementById("addInput"),x=document.getElementById("preview"),y=document.getElementById("addRadioInput"),g=document.getElementById("saveInput");g.style.display="none";const B=document.getElementById("formDiv"),h=document.getElementById("previewDiv");localStorage.setItem("probuiltForm",JSON.stringify([{controlType:"input",labelText:"Name",labelFor:"input-field-0",inputType:"text",inputId:"input-field-0"},{controlType:"input",labelText:"City",labelFor:"input-field-1",inputType:"text",inputId:"input-field-1"}])),null==v||v.addEventListener("click",(()=>{g.style.display="inline",JSON.parse(localStorage.getItem("probuiltForm")).forEach((n=>{E(n)}))})),null==C||C.addEventListener("click",(()=>{g.style.display="inline",E({controlType:"",labelText:"",labelFor:"",inputType:"",inputId:""})})),null==y||y.addEventListener("click",(()=>{g.style.display="inline",function(n,e,r){var t;n=prompt("Provide label value"),r=null===(t=prompt("Give comma separated values"))||void 0===t?void 0:t.split(",");const o=document.getElementById("formDiv"),a=document.createElement("div");a.id=`${e}-${Math.ceil(10*Math.random())}`,a.classList.add("form-div");const i=document.createElement("label");i.textContent=n,a.appendChild(i),i.addEventListener("click",(()=>{const n=document.createElement("input");n.type="text",n.value=i.textContent||"",n.style.width="auto",a.replaceChild(n,i),n.focus(),n.select(),n.addEventListener("blur",(()=>{""!==n.value.trim()&&(i.textContent=n.value),a.replaceChild(i,n)}))})),r.forEach(((n,r)=>{const t=document.createElement("div");t.className="radio-group";const o=document.createElement("input");o.type="radio",o.name=e,o.id=`${e}-${Math.ceil(10*Math.random())}`,o.value=n;const i=document.createElement("label");i.htmlFor=o.id,i.textContent=n,t.appendChild(o),t.appendChild(i),a.appendChild(t)}));const l=document.createElement("button");l.type="button",l.textContent="Remove",l.classList.add("remove-btn"),l.addEventListener("click",(()=>{null==o||o.removeChild(a)})),a.appendChild(l),o.appendChild(a)}("Favorite Color","favoriteColor",["Red","Blue","Yellow"])})),null==x||x.addEventListener("click",(()=>{h.innerHTML="";const n=B.querySelectorAll(".form-div");if(0===n.length)return void alert("No fields to preview!");const e=document.createElement("form");e.style.cssText="\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n  ",n.forEach((n=>{const r=n.cloneNode(!0);r.querySelectorAll("input").forEach((n=>{n.disabled=!0})),r.querySelectorAll("button").forEach((n=>{n.remove()})),e.appendChild(r)}));const r=document.createElement("button");r.type="button",r.textContent="Submit",r.style.width="fit-content",r.style.marginLeft="10px",r.classList.add("preview-submit-button"),e.appendChild(r),h.appendChild(e),h.style.display="block"})),null==g||g.addEventListener("click",(()=>{if(0===B.querySelectorAll("div").length)return void alert("No fields to save!");let n=[];B.querySelectorAll(".form-div").forEach((e=>{var r;const t=e.querySelectorAll("div");if(t.length){let o=[];t.forEach((n=>{var e;const r=null===(e=n.querySelector("input"))||void 0===e?void 0:e.value;o.push(r)}));const a=e.querySelector('input[type="radio"]:checked');n.push({controlType:"input",labelText:null===(r=e.querySelector("label"))||void 0===r?void 0:r.textContent,labelFor:e.id,inputType:"radio",value:null==a?void 0:a.value,options:o})}const o=e.querySelector("label"),a=e.querySelector("input");if(o&&a){const e=o.textContent,r=o.getAttribute("for"),t=a.getAttribute("type"),i=a.id;e&&r&&t&&n.push({controlType:"input",labelText:e,labelFor:r,inputType:t,inputId:i})}localStorage.setItem("formObj",JSON.stringify(n))})),alert("Form saved.")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,